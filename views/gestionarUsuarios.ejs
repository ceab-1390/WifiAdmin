
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-sm-10"><h1 class="text-center">Gestion de usuarios</h1></div>
            <div class="col-sm-1 mt-1"><button class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#newUser">Crear Usuario</button></div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-striped table-responsive">
            <thead>
                <th class="text-center">#</th>
                <th class="text-center">Usuario</th>
                <th class="text-center">Nombre</th>
                <th class="text-center">Apellido</th>
                <th class="text-center">Accion</th>
            </thead>
            <tbody>
                <%users.rows.forEach((user,index) =>{%>
                <tr>
                    <td class="text-center"><%=index+1%></td>
                    <td class="text-center"><%=user.username%></td>
                    <td class="text-center"><%=user.nombre%></td>
                    <td class="text-center"><%=user.apellido%></td>
                    <td class="text-center" >
                        <div class="btn-groiup text-center" role="group">
                            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editUser_<%=user.id%>">Editar</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteUser('<%=user.id%>')">Eliminar</button>
                        </div>
                    </td>
                </tr>
                <!-- Modal Edit-->
                <div class="modal fade" id="editUser_<%=user.id%>" tabindex="-1" aria-labelledby="exampleModalLabel_<%=user.id%>" aria-hidden="true">
                    <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Crear un nuevo usuario</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                        </div>
                        <div class="modal-body">
                        <form action="/usersManageEdit" method="post" id="editForm_<%=user.id%>" onsubmit="validateForm2(this,'<%=user.id%>')" novalidate>
                            <input type="hidden" name="id" id="id" value="<%=user.id%>">
                            <div class="form-floating mb-3">
                                <input type="text" class="form-control" value="<%=user.username%>" name="username" id="username" placeholder="Nombre de Usuario" required pattern="[a-zA-Z0-9]{4,20}">
                                <label for="username">Nombre de Usuario</label>
                                <div class="invalid-feedback">
                                    Solo letras y numeros, al menos 4 letras maximo 20
                                </div>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="text" class="form-control" value="<%=user.nombre%>" name="nombre" id="nombre" placeholder="Nombre" required pattern="[a-zA-Z]{4,20}">
                                <label for="nombre">Nombre</label>
                                <div class="invalid-feedback">
                                    Solo se admiten letras
                                </div>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="text" class="form-control" value="<%=user.apellido%>" name="apellido" id="apellido" placeholder="Apellido" pattern="[a-zA-Z ]{4,20}">
                                <label for="apellido">Apellido</label>
                                <div class="invalid-feedback">
                                    Solo se admiten letras
                                </div>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="text" class="form-control" value="<%=user.cedula%>" name="cedula" id="cedula" placeholder="Cedula" pattern="[0-9]{7,10}">
                                <label for="apellido">Cedula</label>
                                <div class="invalid-feedback">
                                    Solo se admiten numeros
                                </div>
                            </div>
                            <div class="form-check mb-3">
                                <%if (user.admin){%>
                                    <input class="form-check-input" type="checkbox" name="admin" id="isAdmin" value="true" checked>
                                <%}else{%>
                                    <input class="form-check-input" type="checkbox" name="admin" id="isAdmin" value="true">
                                <%}%>
                                <label class="form-check-label" for="isAdmin">
                                    Admin
                                </label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="password" class="form-control" name="password" id="password_<%=user.id%>" placeholder="Contraseña" required pattern="\w{8,16}"> 
                                <label for="password">Contraseña</label>
                                <div class="invalid-feedback">
                                    Campo requerido
                                </div>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="password" class="form-control" name="password" id="password2_<%=user.id%>" placeholder="Confirmar Contraseña" required pattern="\w{8,16}">
                                <label for="password">Confirmar Contraseña</label>
                                <div class="invalid-feedback" id="p_<%=user.id%>">
                                    Campo requerido
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" id="<%=user.id%>" class="btn btn-primary" data-bs-toggle="tooltip" title="Las contraseñas deben coincidir." data-bs-placement="top" >Guardar cambios</button>
                        </form>
                        </div>
                    </div>
                    </div>
                </div>
                <%})%>
            </tbody>
        </table>
    </div>
</div>
  
<!-- Modal Create -->
<div class="modal fade" id="newUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Crear un nuevo usuario</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        <form action="/usersManage" method="post" id="registrationForm"  class="needs-validation" novalidate>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" name="username" id="username" placeholder="Nombre de Usuario" required pattern="[a-zA-Z0-9]{4,20}">
                <label for="username">Nombre de Usuario</label>
                <div class="invalid-feedback">
                    Solo letras y numeros, al menos 4 letras maximo 20
                </div>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" name="nombre" id="nombre" placeholder="Nombre" required pattern="[a-zA-Z ]{4,20}">
                <label for="nombre">Nombre</label>
                <div class="invalid-feedback">
                    Solo se admiten letras
                </div>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" name="apellido" id="apellido" placeholder="Apellido" pattern="[a-zA-Z ]{4,20}">
                <label for="apellido">Apellido</label>
                <div class="invalid-feedback">
                    Solo se admiten letras
                </div>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" value="<%=user.cedula%>" name="cedula" id="cedula" placeholder="Cedula" pattern="[0-9]{7,10}">
                <label for="apellido">Cedula</label>
                <div class="invalid-feedback">
                    Solo se admiten numeros
                </div>
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" name="admin" id="isAdmin" value="true">
                <label class="form-check-label" for="isAdmin">
                  Admin
                </label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" name="password" id="password" placeholder="Contraseña" required pattern="\w{8,16}"> 
                <label for="password">Contraseña</label>
                <div class="invalid-feedback">
                    Campo requerido
                </div>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" name="password" id="password2" placeholder="Confirmar Contraseña" required pattern="\w{8,16}">
                <label for="password">Confirmar Contraseña</label>
                <div class="invalid-feedback" id="p2">
                    Campo requerido
                </div>
            </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary" data-bs-toggle="tooltip" title="Las contraseñas deben coincidir." data-bs-placement="top">Guardar cambios</button>
    </form>
      </div>
    </div>
  </div>
</div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
    var form = document.getElementById('registrationForm');
    form.addEventListener('submit', function(event) {
        if (!checkPasswordsMatch()) {
            event.preventDefault(); // Evita el envío del formulario
            form.classList.add('was-validated'); // Aplica la clase was-validated
            var confirm = document.getElementById('p2');
            confirm.innerHTML = "Las claves no coinciden";
            inputP2 = document.getElementById('password2')
            inputP2.classList.remove('is-valid');
            inputP2.classList.add('is-invalid');
            inputP2.style.borderColor = "red"
            console.log(document.getElementById('password2'))
        }else if (checkPasswordsMatch() != 'vacio'){
            inputP2 = document.getElementById('password2')
            inputP2.classList.add('is-valid');
            inputP2.classList.remove('is-invalid');
            inputP2.style.borderColor = "green"
        }
    });
    });

    function checkPasswordsMatch() {
    var password = document.getElementById('password').value;
    var confirmPassword = document.getElementById('password2').value;
    if (password === ''){
        return 'vacio'
    }
    return password === confirmPassword; // Devuelve true si las contraseñas coinciden
    }

   async function deleteUser(id){
        Swal.fire({
            title: "En realidad desea eliminar el usuario?",
            text: 'Esta accion no podra ser reversada!!',
            showDenyButton: true,
            showCancelButton: true,
            showConfirmButton: false,
            iconHtml: '<img class="img-delete" src="/public/img/Delete.png">',
            customClass: {
                icon: 'img-delete'
            },
            //confirmButtonText: "Save",
            denyButtonText: `Confirmar`
            }).then(async (result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isDenied) {
                try {
                    const response = await fetch(`/usersManageDelete/${id}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            //data si es necesaria
                        }),
                    });
                    const jsonResponse = await response.json();
                    if (jsonResponse.deleted){
                        Swal.fire("Se elimino el registro", "", "success");
                        setTimeout(() => {
                            location.reload()
                        }, 1000);
                    }else{
                        Swal.fire("Error al eliminar el registro", "", "error");
                    }
                } catch (error) {
                    console.error(new Error(error))
                }
            }
        });
    }
</script>